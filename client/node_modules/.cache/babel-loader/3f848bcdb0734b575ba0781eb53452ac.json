{"ast":null,"code":"import { takeEvery } from \"redux-saga/effects\";\nimport { firestore, converCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nimport ShopActionTypes from \"./shop.types\";\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n  const collectionRef = firestore.collection(\"collections\");\n  fetchCollectionsStart();\n  collectionRef.get().then(snapshot => {\n    const collectionsMap = converCollectionsSnapshotToMap(snapshot);\n    fetchCollectionsSuccess(collectionsMap);\n  }).catch(error => fetchCollectionsFailure(error.message));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/reyjr.guidoriagao/Documents/PROJECTS/rey-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","firestore","converCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsAsync","console","log","collectionRef","collection","fetchCollectionsStart","get","then","snapshot","collectionsMap","fetchCollectionsSuccess","catch","error","fetchCollectionsFailure","message","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,+BAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,UAAUC,qBAAV,GAAkC;AACvC,QAAMC,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AACA,QAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACAC,EAAAA,qBAAqB;AAErBF,EAAAA,aAAa,CACVG,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,UAAMC,cAAc,GAAGX,8BAA8B,CAACU,QAAD,CAArD;AACAE,IAAAA,uBAAuB,CAACD,cAAD,CAAvB;AACD,GALH,EAMGE,KANH,CAMUC,KAAD,IAAWC,uBAAuB,CAACD,KAAK,CAACE,OAAP,CAN3C;AAOD;AACD,OAAO,UAAUT,qBAAV,GAAkC;AACvC,QAAMT,SAAS,CACbG,eAAe,CAACgB,uBADH,EAEbf,qBAFa,CAAf;AAID","sourcesContent":["import { takeEvery } from \"redux-saga/effects\";\nimport {\n  firestore,\n  converCollectionsSnapshotToMap,\n} from \"../../firebase/firebase.utils\";\n\nimport ShopActionTypes from \"./shop.types\";\n\nexport function* fetchCollectionsAsync() {\n  yield console.log(\"I am fired\");\n  const collectionRef = firestore.collection(\"collections\");\n  fetchCollectionsStart();\n\n  collectionRef\n    .get()\n    .then((snapshot) => {\n      const collectionsMap = converCollectionsSnapshotToMap(snapshot);\n      fetchCollectionsSuccess(collectionsMap);\n    })\n    .catch((error) => fetchCollectionsFailure(error.message));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n"]},"metadata":{},"sourceType":"module"}