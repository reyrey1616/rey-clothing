{"ast":null,"code":"import ShopActionTypes from \"./shop.types\";\nimport { firestore, converCollectionsSnapshotToMap } from \"../firebase/firebase.utils\";\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then(snapShot => {\n      const collectionsMap = converCollectionsSnapshotToMap(snapShot);\n    });\n  };\n};\nexport const fetchCollectionSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS\n});","map":{"version":3,"sources":["/Users/reyjr.guidoriagao/Documents/PROJECTS/rey-clothing/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","converCollectionsSnapshotToMap","fetchCollectionStart","type","FETCH_COLLECTIONS_START","fetchCollectionStartAsync","dispatch","collectionRef","collection","get","then","snapShot","collectionsMap","fetchCollectionSuccess","FETCH_COLLECTIONS_SUCCESS"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SACEC,SADF,EAEEC,8BAFF,QAGO,4BAHP;AAIA,OAAO,MAAMC,oBAAoB,GAAG,OAAO;AACzCC,EAAAA,IAAI,EAAEJ,eAAe,CAACK;AADmB,CAAP,CAA7B;AAIP,OAAO,MAAMC,yBAAyB,GAAG,MAAM;AAC7C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACJ,oBAAoB,EAArB,CAAR;AACAK,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAA0BC,QAAD,IAAc;AACrC,YAAMC,cAAc,GAAGX,8BAA8B,CAACU,QAAD,CAArD;AACD,KAFD;AAGD,GAND;AAOD,CARM;AAUP,OAAO,MAAME,sBAAsB,GAAID,cAAD,KAAqB;AACzDT,EAAAA,IAAI,EAAEJ,eAAe,CAACe;AADmC,CAArB,CAA/B","sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport {\n  firestore,\n  converCollectionsSnapshotToMap,\n} from \"../firebase/firebase.utils\";\nexport const fetchCollectionStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionStartAsync = () => {\n  return (dispatch) => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionStart());\n    collectionRef.get().then((snapShot) => {\n      const collectionsMap = converCollectionsSnapshotToMap(snapShot);\n    });\n  };\n};\n\nexport const fetchCollectionSuccess = (collectionsMap) => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n});\n"]},"metadata":{},"sourceType":"module"}