{"ast":null,"code":"import _slicedToArray from \"/Users/reyjr.guidoriagao/Documents/PROJECTS/rey-clothing/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/reyjr.guidoriagao/Documents/PROJECTS/rey-clothing/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { SignInContainer, SignInTitle, ButtonsBarContainer } from \"./sign-in.styles\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        email = _useState2[0],\n        setEmail = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        password = _useState4[0],\n        setPassword = _useState4[1];\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  return React.createElement(SignInContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(SignInTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: setEmail(event => event.target.value),\n    value: email,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: setPassword(event => event.target.value),\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(ButtonsBarContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" Sign in \"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/reyjr.guidoriagao/Documents/PROJECTS/rey-clothing/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignInContainer","SignInTitle","ButtonsBarContainer","SignIn","email","setEmail","password","setPassword","handleSubmit","event","preventDefault","handleChange","target","value","name","setState","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport {\n  googleSignInStart,\n  emailSignInStart,\n} from \"../../redux/user/user.actions\";\n\nimport {\n  SignInContainer,\n  SignInTitle,\n  ButtonsBarContainer,\n} from \"./sign-in.styles\";\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = (event) => {\n    const { value, name } = event.target;\n\n    this.setState({ [name]: value });\n  };\n\n  return (\n    <SignInContainer>\n      <SignInTitle>I already have an account</SignInTitle>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name=\"email\"\n          type=\"email\"\n          handleChange={setEmail((event) => event.target.value)}\n          value={email}\n          label=\"email\"\n          required\n        />\n        <FormInput\n          name=\"password\"\n          type=\"password\"\n          value={password}\n          handleChange={setPassword((event) => event.target.value)}\n          label=\"password\"\n          required\n        />\n        <ButtonsBarContainer>\n          <CustomButton type=\"submit\"> Sign in </CustomButton>\n          <CustomButton\n            type=\"button\"\n            onClick={googleSignInStart}\n            isGoogleSignIn\n          >\n            Sign in with Google\n          </CustomButton>\n        </ButtonsBarContainer>\n      </form>\n    </SignInContainer>\n  );\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password })),\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}